version: '3.8'

services:
  vpn_server:
    build:
      context: .
      dockerfile: vpn_server.Dockerfile
    container_name: vpn_server
    ports:
      - "8000:8000"
    volumes:
      - ./server.crt:/app/server.crt  # Certificate file for SSL
      - ./server.key:/app/server.key  # Private key for SSL
      - ./vpn_server.py:/app/vpn_server.py:cached  # Mount the vpn_server script directly
    networks:
      - vpn_network_server  # Use a different network for vpn_server

  vpn_tunnel:
    build:
      context: .
      dockerfile: vpn_tunnel.Dockerfile
    container_name: vpn_tunnel
    depends_on:
      - vpn_server
    ports:
      - "8080:8080"
    networks:
      - vpn_network
    volumes:
      - ./server.crt:/app/server.crt  # Certificate file for SSL
      - ./vpn_tunnel.py:/app/vpn_tunnel.py:cached  # Mount the vpn_tunnel script directly
    stdin_open: true
    tty: true

  vpn_client:
    build: .
    container_name: vpn_client
    depends_on:
      - vpn_tunnel
    networks:
      - vpn_network  # Keep vpn_client on the original network
    volumes:
      - ./vpn_client.py:/app/vpn_client.py:cached  # Mount the vpn_client script directly
    entrypoint: ["python", "/app/vpn_client.py"]
    stdin_open: true
    tty: true

networks:
  vpn_network:          # Original network for vpn_tunnel and vpn_client
    driver: bridge

  vpn_network_server:   # New separate network for vpn_server
    driver: bridge
